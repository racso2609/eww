(defvar reveal_music false)
(defvar hover_player false)

(defpoll song_art :interval "5s"
    "$HOME/.config/eww/scripts/getMusicImage")

(deflisten music_artist
  :initial "Not Artist"
  "playerctl --follow metadata --format '{{ artist }}' || true"
  )

(defpoll music_status :interval "1s"
  :initial "Not Music"
  `playerctl status`
  )

(deflisten music_title
  :initial "Not Music"
  "playerctl --follow metadata --format '{{ trunc(title,20) }}' || true"
  )

(deflisten music_title_short
  :initial "Not Music"
  "playerctl --follow metadata --format '{{ trunc(title,10) }}' || true"
)
; (defpoll is_playing
  ; :initial false
  ; :interval '1s'
    ; music_status == "Playing")






(defwidget music_text [] 

(box 
  :class "music_title"
  :orientation "v"
  :space-evenly false
  {music_title}
{`ﴁ ${music_artist}`}
  ))


(defwidget player_icons [icon onclick ]
  (button
    :onclick onclick
  (box 
    :class "player_icon"
    (labeled-container  :name icon :w 50 :h 50))))


(defwidget music []
  (box :class "music"
    :orientation "h"
    :space-evenly false
    :spacing 10
    :valign 'center'
    :halign 'center'
      (circular-progress-bar
        :dimension 165

      (box
        :width 150
        :height 150

          (image :path song_art
            :image-height 150
        )))
      (box :orientation 'v'
        :valign 'center'
        :halign 'center'
          (music_text)

   
          (box :orientation "h" :halign 'cetern' :valign "center" 
          (player_icons :icon "玲"
            :onclick `playerctl previous`)
          (eventbox 
            :onhover `${eww} update hover_player=true`
            :onhoverlost `${eww} update hover_player=false`
          (player_icons
            :icon {music_status ==  "Playing" ? hover_player ? "":"":hover_player ? "":""}
            :onclick `playerctl play-pause`))

          (player_icons :icon "怜"
            :onclick `playerctl next`)))))



(defwidget music_module []
  (box
    :halign "center"
    (eventbox
      :onhover '${eww} update reveal_music=true'
      :onhoverlost '${eww} update reveal_music=false'
      :onclick `${eww} update reveal_music=${!reveal_music}`
      (box :space-evenly false :spacing 10
        :class `${reveal_music?"music_icon_hover":""} music_title_short`
        (button
          :onclick 'bash $HOME/.config/eww/scripts/openMusic'
          :class `music_icon`
            (circular-progress-bar
              :dimension 30
              :value 50
              (box :width 30 :height 30
              (image :path song_art
                :image-height 30))))
                  music_title_short))))


(defwindow music_menu 
  :geometry (geometry :x "40%" 
  :y "40" 
  :anchor "top left")
  (eventbox
    :onhoverlost `${eww} update reveal_music=false && $HOME/.config/eww/scripts/openMusic`
    (music)))




