
(defwidget labeled-container [name ?w ?h ?style ?class]
  (box :class "container"

  :width w
  :height h
  :style style
    :class class
    name
    (children)))


(defwidget two-boxes [?orientation ?space-evenly ?spacing ?valign ?halign ?class ?width ?style]
  (box
    :style 'background-color: ${background}; color: ${foreground};${style}'
    :orientation {orientation == '' ? 'h' : orientation}
    :space-evenly {space-evenly == '' ? false : space-evenly }
    :width {width == '' ? 0 : width}
    :spacing spacing
    :valign {valign == '' ? 'center': valign}
    :halign {halign == '' ? 'center': halign}
    :class class

     (children :nth 0)
     (children :nth 1)))


(defwidget metric [icon labelClass label value  h iconClass spacing valign ]
  (box :orientation h
    :class "metric"
    :space-evenly false
    :spacing spacing
    :valign valign


    (box :class iconClass icon)

    (box :class labelClass label)

    (circular-progress
      :value value
      :start-angle 90
      :thickness 10
      :class "progress"
           )))

(defwidget circular-progress-bar [?class ?value ?thickness ?start-angle ?dimension]
    (circular-progress
      :style 'color: ${white}; background-color: ${magenta}'
      :value value
      :height {dimension != '' ? dimension + 10 : 10}
      :width {dimension != '' ? dimension + 10 : 10}
      :start-at start-angle
      :thickness thickness
      :class "${class} progress"
      (children)
           )

  )
